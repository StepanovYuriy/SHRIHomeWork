{
  "openapi": "3.0.1",
  "info": {
    "title": "School CI API",
    "description": "API для работы клиентской части приложения",
    "version": "v1"
  },
  "servers": [
    {
      "url": "/api"
    }
  ],
  "paths": {
    "/settings": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Получение сохранённых настроек",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationModelHomeworkApiResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Сохранение настроек",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/builds": {
      "get": {
        "tags": [
          "Builds"
        ],
        "summary": "Получение списка сборок",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildModelArrayHomeworkApiResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Builds"
        ],
        "summary": "Добавление сборки в очередь",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommitHashInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/builds/{buildId}": {
      "get": {
        "tags": [
          "Builds"
        ],
        "summary": "Получение информации о конкретной сборке",
        "parameters": [
          {
            "name": "buildId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildModelHomeworkApiResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/builds/{buildId}/logs": {
      "get": {
        "tags": [
          "Builds"
        ],
        "summary": "Получение логов билда",
        "parameters": [
          {
            "name": "buildId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "schemas": {
      "BuildStatus": {
        "enum": [
          "Waiting",
          "InProgress",
          "Success",
          "Fail",
          "Canceled"
        ],
        "type": "string"
      },
      "BuildModel": {
        "required": [
          "authorName",
          "branchName",
          "buildNumber",
          "commitHash",
          "commitMessage",
          "configurationId",
          "id",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "configurationId": {
            "type": "string",
            "format": "uuid"
          },
          "buildNumber": {
            "type": "integer",
            "format": "int32"
          },
          "commitMessage": {
            "type": "string"
          },
          "commitHash": {
            "type": "string"
          },
          "branchName": {
            "type": "string"
          },
          "authorName": {
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BuildStatus"
              }
            ]
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "duration": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BuildModelArrayHomeworkApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BuildModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BuildModelHomeworkApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BuildModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommitHashInput": {
        "required": [
          "commitHash"
        ],
        "type": "object",
        "properties": {
          "commitHash": {
            "type": "string"
          }
        },
        "example": {
          "commitHash": "ddefe2c2"
        },
        "additionalProperties": false
      },
      "ConfigurationModel": {
        "required": [
          "buildCommand",
          "id",
          "mainBranch",
          "period",
          "repoName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "repoName": {
            "type": "string"
          },
          "buildCommand": {
            "type": "string"
          },
          "mainBranch": {
            "type": "string"
          },
          "period": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ConfigurationModelHomeworkApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConfigurationModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConfigurationInput": {
        "required": [
          "buildCommand",
          "mainBranch",
          "period",
          "repoName"
        ],
        "type": "object",
        "properties": {
          "repoName": {
            "type": "string"
          },
          "buildCommand": {
            "type": "string"
          },
          "mainBranch": {
            "type": "string"
          },
          "period": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "repoName": "https://github.com/StepanovYuriy/test.git",
          "buildCommand": "run build",
          "mainBranch": "master",
          "period": 0
        },
        "additionalProperties": false
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme.<br/>\n                      Enter 'Bearer' [space] and then your token in the text input below.<br/>\n                      Example: 'Bearer 12345abcdef'",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}